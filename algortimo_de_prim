import MINHEAP as heap
#---------------------------------------- algoritmo de prim :

# mudar essa seção :
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
numero_nos,numero_de_arestas = input().split()

numero_nos=int(numero_nos)

numero_de_arestas=int(numero_de_arestas)

lista_heap=[]
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


 #lista de vizinhos pra cada nó : 

lista_vizinhos=[[]*numero_nos for i in range(numero_nos)]

for j in range(numero_de_arestas):

    valor1,valor2,custo=input().split()

    valor1=int(valor1)

    valor2=int(valor2)

    custo=int(custo)

    lista_vizinhos[valor1].append((valor2,custo))

    lista_vizinhos[valor2].append((valor1,custo))

# até aqui estamos apenas criando a estrutura do grafo 

# começando a bagunça ...... 

#raiz escolhida : 
raiz = 4

for (x,custo) in lista_vizinhos[raiz]:

    heap.heappush(lista_heap,(custo,raiz,x))

contador_auxiliar = 0

custo_total=0

marcados=[raiz]

arvore_geradora=[]

while contador_auxiliar<numero_nos-1:

    while True:

        (custo,valor1,valor2)=heap.heappop(lista_heap)

        if valor2 not in marcados:

            break
    marcados.append(valor2)

    custo_total+=custo

    arvore_geradora.append((valor1,valor2))

    contador_auxiliar+=1

    for(x,custo) in lista_vizinhos[valor2]:

        if x not in marcados:

            heap.heappush(lista_heap,(custo,valor2,x))

print(custo_total)
print(arvore_geradora)
